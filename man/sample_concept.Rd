% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optim_fca.R
\name{sample_concept}
\alias{sample_concept}
\title{Sampling a formal concept}
\usage{
sample_concept(context, steps = 10000, f)
}
\arguments{
\item{context}{is the underlying context}

\item{steps}{is the number of steps within the Markov chain Monte Carlo
algorithm}

\item{f}{is the depth function which assigns to every intent a sampling
probability. This functions has to have two arguments: the intent and the
underlying context}
}
\description{
'sample_concept' samples a formal concept of a given formal context
according to a probability function f that assigns to every intent a
corrseponding sampling probability. The algorithm implemented is the one
given based in:
}
\details{
Mario Boley, Thomas GÃ¤rtner and Henrik Grosskreutz:
Formal Concept Sampling for Counting and Threshold-Free Local Pattern Mining.
Proceedings of the 2010 SIAM International Conference on Data Mining (SDM)
pp.177 - 188
}
\examples{
q <- 5
steps <- 10000
context_for_q_porders <- compute_context_all_porders(q = q)
corders <- compute_all_partial_orders(q = q, complemented = TRUE, list = TRUE)
context <- list_to_context(corders, complemented = TRUE)
index <- sample((1:nrow(context)), size = 3)
sampled_context <- context[index, ]
g <- function(intent, context) {
  0.00001 + compute_tukeys_depth(c(intent, 1 - intent), sampled_context)
}
tukeys_true_median <- compute_tukeys_median_order(corders[index])
tukeys_median_based_on_mc_heuristic <- sample_concept(
  context_for_q_porders,
  steps = steps, g
)
par(mfrow = c(2, 1))
plot_order(tukeys_true_median$median)
dim(tukeys_median_based_on_mc_heuristic) <- c(q, q)
plot_order(tukeys_median_based_on_mc_heuristic)

}
