% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tukeys_depth.R
\name{compute_geodetic_median}
\alias{compute_geodetic_median}
\title{Tukeys geodetic median order}
\usage{
compute_geodetic_median(c_orders, proportion, auto = FALSE, fraction)
}
\arguments{
\item{c_orders}{data set of partial orders (given in the form of a list of
posets, where every entry of the list is an incidence relation apposited
with its negation. (In terms of conceptual scaling we use here the
complemented scaling)}

\item{proportion}{is the proportion of the deepest observed data points that
have to formally imply the partial order that is considered for the
constrained optimization of Tukeys depth.}

\item{auto}{if set to TRUE (default is FALSE) then the paraneter proportion
is determined automatically: First the least proportion p of the deepest
partial orders that formally imply the true median Tukey order (see the
function 'compute_tukeys_median order) is determined. Then the parameter
proportion is set to fraction * p.}

\item{fraction}{see the parameter auto above.}
}
\value{
returns one of the partial orders that is implied by proportion times
100\% of the most deepest data points and has the highest Tukey depth. (If
there are more than one such partial orders, a randomly choosen such partial
orders is returned.)
}
\description{
'compute_geodetic_median' computes that partial order
in the space of ALL partial orders that has the maximal Tukeys depth
w.r.t. the given data cloud represented by the given context
(given in the form of a list of posets, where every entry of the list is
an incidence relation apposited with its negation. (In terms of conceptual
scaling we use here the complemented scaling) under the ADDITIONAL ConsSRAINT
that the partial order is formally implied by the proprotion times 100\% of
the most depeste partial orders that are given in the data set. Thus, for
proportion = 1 we obtain the true median partial order w.r.t. Tukeys depth
and for proportion =1/number of data pointe we essentialially (i.e., modulo
ties ) we obtain that partial order in the data set taht has the largest
Tukey data depth.
}
\examples{
all_5_c_orders <- compute_all_partial_orders(
  n_items = 5, complemented = TRUE,
  list = TRUE
)

withr::with_seed(seed=1234567,
indexs <- sample((1:length(all_5_c_orders)),size=10)
)
sampled_c_orders <- all_5_c_orders[indexs]
tukeys_median <- compute_tukeys_median_order(sampled_c_orders)$median
tukeys_geodetic_median <- compute_geodetic_median(sampled_c_orders,
auto=TRUE,fraction=0.9)$median

plot_relation(tukeys_median)
plot_relation(tukeys_geodetic_median)

}
